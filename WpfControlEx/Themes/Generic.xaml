<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WpfControlEx.Controls"
    xmlns:converter="clr-namespace:WpfControlEx.Converter"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <LinearGradientBrush x:Key="WindowTitleBackground"
                         StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF1890FF" Offset="0"/>
        <GradientStop Color="#FF1890FF" Offset="0.5"/>
        <GradientStop Color="#FF1890FF" Offset="0.5"/>
        <GradientStop Color="#FF1890FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NonActiveWindowTitleBackground"
                         StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#BF1890FF" Offset="0"/>
        <GradientStop Color="#BF1890FF" Offset="0.5"/>
        <GradientStop Color="#BF1890FF" Offset="0.5"/>
        <GradientStop Color="#BF1890FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WindowNormalBorder"  EndPoint="0.5,1" StartPoint="0,0">
        <GradientStop Color="#FF47A8EE" Offset="0"/>
        <GradientStop Color="#FF47A8EE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NonActiveWindowNormalBorder"  EndPoint="0.5,1" StartPoint="0,0">
        <GradientStop Color="#BF47A8EE" Offset="0"/>
        <GradientStop Color="#BF47A8EE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBackgroundBlue" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF108EE9" Offset="0"/>
        <GradientStop Color="#FF108EE9" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBackgroundWhite" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="White" Offset="0.5"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#BF808080"/>

    <SolidColorBrush x:Key="ButtonNormalBorderLightGray" Color="LightGray"/>

    <LinearGradientBrush x:Key="ButtonMouseOverBlue" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF47A8EE" Offset="0"/>
        <GradientStop Color="#FF47A8EE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBlue" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF1286DA" Offset="0"/>
        <GradientStop Color="#FF1286DA" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonMouseOverLightGray" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="WhiteSmoke" Offset="0"/>
        <GradientStop Color="WhiteSmoke" Offset="0.5"/>
        <GradientStop Color="WhiteSmoke" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedLightGray" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBEBEB" Offset="0"/>
        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
        <GradientStop Color="#FFEBEBEB" Offset="1"/>
    </LinearGradientBrush>
    



    <Style x:Key="ButtonMinimize" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Path Stretch="Fill" Stroke="White" StrokeThickness="1" Width="11" Height="11">
                            <Path.Data>
                                <LineGeometry StartPoint="0,0.5" EndPoint="1,0.5"></LineGeometry>
                            </Path.Data>
                        </Path>                        
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5AFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#5A666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMaximize" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Path Stretch="Fill" Stroke="White" StrokeThickness="1" Width="10" Height="10">
                            <Path.Data>
                                <RectangleGeometry Rect="0 0 1 1"></RectangleGeometry>
                            </Path.Data>
                        </Path>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5AFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#5A666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRestore" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Path Stretch="Fill" Stroke="White" StrokeThickness="1" Width="10" Height="10">
                            <Path.RenderTransform>
                                <TranslateTransform X="1" Y="-1"></TranslateTransform>
                            </Path.RenderTransform>
                            <Path.Data>
                                <RectangleGeometry Rect="0 0 1 1"></RectangleGeometry>
                            </Path.Data>
                        </Path>
                        <Path Stretch="Fill" Fill="Transparent" Stroke="White" StrokeThickness="1" Width="10" Height="10">
                            <Path.RenderTransform>
                                <TranslateTransform X="-1" Y="1"></TranslateTransform>
                            </Path.RenderTransform>
                            <Path.Data>
                                <RectangleGeometry Rect="0 0 1 1"></RectangleGeometry>
                            </Path.Data>
                        </Path>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5AFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#5A666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonClose" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Path Stretch="Fill" Stroke="White" StrokeThickness="1" Width="11" Height="11">
                            <Path.Data>
                                <LineGeometry StartPoint="0,0" EndPoint="1,1"></LineGeometry>
                            </Path.Data>
                        </Path>
                        <Path Stretch="Fill" Fill="{StaticResource WindowTitleBackground}" 
                              Stroke="White" StrokeThickness="1" Width="11" Height="11">
                            <Path.Data>
                                <LineGeometry StartPoint="0,1" EndPoint="1,0"></LineGeometry>
                            </Path.Data>
                        </Path>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF45454"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#C0F45454"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:WindowEx}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanMinimize"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WindowEx}">
                    <Border Name="PART_WindowBorder" Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource WindowNormalBorder}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid.Resources>
                                <sys:Double x:Key="StraightResizerSize">3</sys:Double>
                                <sys:Double x:Key="SlantResizerSize">8</sys:Double>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Fill="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>

                            <Grid Name="PART_TitleBar" Height="30">
                                <Border Name="PART_WindowTitleBackground" BorderThickness="0,0,0,0"
                                    Background="{StaticResource WindowTitleBackground}">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Image x:Name="PART_Icon" 
                                               Source="{TemplateBinding Icon}"
                                               Width="20" Height="20" 
                                               Margin="5,0,0,0" 
                                               VerticalAlignment="Center"></Image>
                                        <TextBlock Grid.Column="1" FontSize="14" 
                                                   Text="{TemplateBinding Title}"
                                                   Foreground="White"
                                                   VerticalAlignment="Center" 
                                                   Margin="5,0,0,0"/>
                                        <Button Grid.Column="2" Name="PART_TitleMinimizeButton"
                                                Width="40" Height="30"  ToolTip="{TemplateBinding MinimizeButtonTooltip}"
                                                Style="{StaticResource ButtonMinimize}" 
                                                Padding="5,0,5,0" VerticalAlignment="Top"/>
                                        <Button Grid.Column="3" Name="PART_TitleMaximizeButton"
                                                Width="40" Height="30"  ToolTip="{TemplateBinding MaximizeButtonTooltip}"
                                                Style="{StaticResource ButtonMaximize}"
                                                Padding="5,0,5,0" VerticalAlignment="Top"/>
                                        <Button Grid.Column="4" Name="PART_TitleRestoreButton"
                                                Width="40" Height="30"  ToolTip="{TemplateBinding RestoreButtonTooltip}"
                                                Style="{StaticResource ButtonRestore}"
                                                Padding="5,0,5,0" VerticalAlignment="Top"/>
                                        <Button Grid.Column="5" Name="PART_TitleCloseButton" 
                                                Width="40" Height="30"  ToolTip="{TemplateBinding CloseButtonTooltip}"
                                                Style="{StaticResource ButtonClose}"
                                                HorizontalAlignment="Right" 
                                                Margin="0,0,5,0" VerticalAlignment="Top" >
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>

                            <Grid Grid.Row="1">
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </Grid>

                            <Thumb Width="{StaticResource StraightResizerSize}"
                                       VerticalAlignment="Stretch" HorizontalAlignment="Left" Cursor="SizeWE" 
                                       x:Name="PART_LeftResizer" Visibility="Collapsed"
                                   Grid.RowSpan="2"/>
                            <Thumb Height="{StaticResource StraightResizerSize}" 
                                       VerticalAlignment="Top" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                       x:Name="PART_TopResizer" Visibility="Collapsed"/>
                            <Thumb Width="{StaticResource StraightResizerSize}" 
                                       VerticalAlignment="Stretch" HorizontalAlignment="Right" Cursor="SizeWE" 
                                       x:Name="PART_RightResizer" Visibility="Collapsed"
                                   Grid.RowSpan="2"/>
                            <Thumb Height="{StaticResource StraightResizerSize}"
                                       VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                       x:Name="PART_BottomResizer" Visibility="Collapsed"
                                   Grid.Row="1"/>
                            <ResizeGrip Width="{StaticResource SlantResizerSize}" 
                                            Height="{StaticResource SlantResizerSize}" HorizontalAlignment="Right" 
                                            VerticalAlignment="Bottom"
                                            x:Name="PART_ResizeGrip" Visibility="Collapsed"
                                        Grid.Row="1"/>
                            <Thumb Width="{StaticResource SlantResizerSize}" 
                                       Height="{StaticResource SlantResizerSize}" 
                                       HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE" 
                                       x:Name="PART_BottomRightResizer" Visibility="Collapsed"
                                   Grid.Row="1"/>
                            <Thumb Width="{StaticResource SlantResizerSize}"
                                       Height="{StaticResource SlantResizerSize}"
                                       HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="SizeNESW" 
                                       x:Name="PART_TopRightResizer" Visibility="Collapsed"/>
                            <Thumb Width="{StaticResource SlantResizerSize}"
                                       Height="{StaticResource SlantResizerSize}" HorizontalAlignment="Left" 
                                       VerticalAlignment="Top" Cursor="SizeNWSE" 
                                       x:Name="PART_TopLeftResizer" Visibility="Collapsed"/>
                            <Thumb Width="{StaticResource SlantResizerSize}"
                                       Height="{StaticResource SlantResizerSize}" HorizontalAlignment="Left" 
                                       VerticalAlignment="Bottom" Cursor="SizeNESW" 
                                       x:Name="PART_BottomLeftResizer" Visibility="Collapsed"
                                   Grid.Row="1"/>

                            <!--蒙板-->
                            <Grid Name="PART_MaskGrid" Background="#7F000000" 
                                  Visibility="Collapsed" Grid.RowSpan="2"></Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsModelWindow" Value="true">
                            <Setter TargetName="PART_TitleMinimizeButton"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TitleMaximizeButton"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TitleRestoreButton"
                                    Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="PART_LeftResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TopResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RightResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_BottomResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ResizeGrip"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_BottomRightResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TopRightResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TopLeftResizer"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_BottomLeftResizer"
                                    Property="Visibility" Value="Collapsed"/>
                        </Trigger>-->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_TitleMaximizeButton"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TitleRestoreButton"
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_WindowBorder"
                                    Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_TitleMaximizeButton"
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_TitleRestoreButton"
                                    Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_LeftResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_TopResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_RightResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_BottomResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ResizeGrip" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_BottomRightResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_TopRightResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_TopLeftResizer" 
                                    Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_BottomLeftResizer" 
                                    Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <!--  handle active/inactive state  -->
                        <Trigger Property="IsAppActive" Value="False">
                            <Setter TargetName="PART_WindowBorder" Property="BorderBrush" Value="{StaticResource NonActiveWindowNormalBorder}" />
                            <Setter TargetName="PART_WindowTitleBackground" Property="Background" Value="{StaticResource NonActiveWindowTitleBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageBoxExStyle" TargetType="{x:Type controls:MessageBoxWindow}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="50" 
                                    CornerRadius="0" 
                                    GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MessageBoxWindow}">
                    <Border Name="PART_WindowBorder" Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource WindowNormalBorder}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Name="PART_TitleBar" Height="50">
                                <Border Margin="20,10,20,10">
                                    <TextBlock Grid.Column="1" FontSize="18" 
                                           Foreground="Black" VerticalAlignment="Center" 
                                                   Text="{TemplateBinding Title}"/>
                                </Border>
                            </Grid>

                            <Grid Grid.Row="1">
                                <Border>
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  handle active/inactive state  -->
                        <Trigger Property="IsAppActive" Value="False">
                            <Setter TargetName="PART_WindowBorder" Property="BorderBrush" Value="{StaticResource NonActiveWindowNormalBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBlue" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundBlue}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonNormalBackgroundBlue}" CornerRadius="2">
                        <Grid Name="PART_MainGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10,5,10,5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid Name="PART_FocusRectangle">
                                <Rectangle Margin="{TemplateBinding Padding}" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_FocusRectangle" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter TargetName="PART_FocusRectangle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBlue}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonWhite" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundWhite}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderLightGray}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF6E6E6E"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonNormalBorderLightGray}" CornerRadius="2">
                        <Grid  Background="{TemplateBinding Background}" >
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10,5,10,5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid Name="PART_FocusRectangle">
                                <Rectangle Margin="{TemplateBinding Padding}" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_FocusRectangle" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter TargetName="PART_FocusRectangle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverLightGray}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedLightGray}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
